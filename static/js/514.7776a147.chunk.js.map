{"version":3,"file":"static/js/514.7776a147.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","Material-UI/deleteButton-ui.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsListItem/ContactsListItems.module.css?c71c","components/ContactsListItem/ContactsListItems.jsx","components/ContactsList/ContactsListLayout.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/filter/selectors.js","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/FormAddContact/FormAddContact.module.css?3d0a","components/FormAddContact/FormAddContact.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableContacts\":\"ContactsList_tableContacts__jcUNQ\",\"tableCell\":\"ContactsList_tableCell__IIRWR\",\"tableThead\":\"ContactsList_tableThead__1tS96\"};","import DeleteIcon from '@mui/icons-material/Delete';\nimport IconButton from '@mui/material/IconButton';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Hourglass } from 'react-loader-spinner';\n\nconst DeleteButton = ({ onClick, disabled }) => {\n  return (\n    <Tooltip title=\"Delete\">\n      <IconButton type=\"button\" onClick={onClick} disabled={disabled}>\n        {disabled ? (\n          <div style={{ width: '24px', height: '24px' }}>\n            <Hourglass\n              visible={true}\n              height=\"20\"\n              width=\"16\"\n              ariaLabel=\"hourglass-loading\"\n              colors={['#757575', '#757575']}\n            />\n          </div>\n        ) : (\n          <DeleteIcon />\n        )}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default DeleteButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableCell\":\"ContactsListItems_tableCell__LCtL3\",\"tableRow\":\"ContactsListItems_tableRow__kgz7y\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operation';\nimport DeleteButton from 'Material-UI/deleteButton-ui';\nimport css from './ContactsListItems.module.css';\nimport { useState } from 'react';\n\nexport const ContactsListItems = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleDelete = async () => {\n    setIsLoading(true);\n    await dispatch(deleteContact(id));\n    setIsLoading(false);\n  };\n  return (\n    <tr className={css.tableRow}>\n      <td className={css.tableCell}>{name}</td>\n      <td className={css.tableCell}>{number}</td>\n      <td className={css.tableCell}>\n        {<DeleteButton onClick={handleDelete} disabled={isLoading} />}\n      </td>\n    </tr>\n  );\n};\n","import css from './ContactsList.module.css';\nimport { ContactsListItems } from 'components/ContactsListItem/ContactsListItems';\n\nconst ContactsListLayout = ({ data }) => {\n  return (\n    <table className={css.tableContacts}>\n      <thead className={css.tableThead}>\n        <tr>\n          <th className={css.tableCell}>Name</th>\n          <th className={css.tableCell}>Phone Number</th>\n          <th className={css.tableCell}>Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map(({ id, name, number }) => (\n          <ContactsListItems key={id} id={id} name={name} number={number} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default ContactsListLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\"};","import { TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nconst FilterByName = () => {\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <div className={css.filterContainer}>\n      <TextField\n        id=\"FindByName\"\n        label=\"Find by name\"\n        type=\"text\"\n        //   name=\"userMail\"\n        size=\"small\"\n        onChange={changeFilter}\n      />\n    </div>\n  );\n};\n\nexport default FilterByName;\n","export const selectFilterValue = state => state.filter.value;\n","// import { ContactsListItems } from 'components/ContactsListItem/ContactsListItems';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\n// import css from './ContactsList.module.css';\nimport { selectUser } from 'redux/auth/auth-selectors';\nimport ContactsListLayout from './ContactsListLayout';\nimport FilterByName from 'components/Filter/Filter';\nimport { selectFilterValue } from 'redux/filter/selectors';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(selectContacts);\n  const user = useSelector(selectUser);\n  const filterValue = useSelector(selectFilterValue);\n\n  const visibleContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    if (!data) {\n      return;\n    }\n    return data.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const contactsForRender = visibleContacts();\n\n  useEffect(() => {\n    user.name && dispatch(fetchContacts());\n  }, [dispatch, user.name]);\n\n  return (\n    <div className=\"container\">\n      {data &&\n        (data.length === 0 ? (\n          <h2 style={{ textAlign: 'center' }}>No contacts in the list</h2>\n        ) : (\n          <>\n            <FilterByName />\n            <ContactsListLayout data={contactsForRender} />\n          </>\n        ))}\n    </div>\n  );\n};\n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"addForm\":\"FormAddContact_addForm__BfbTs\"};","import { Button, TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport css from './FormAddContact.module.css';\nimport { toast } from 'react-toastify';\n\nconst FormAddContact = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(selectContacts);\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const checkContact = userName => {\n    const normalizedNewContactName = userName.toLowerCase();\n    return data.some(\n      contact => contact.name.toLowerCase() === normalizedNewContactName\n    );\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.userName.value;\n    const number = form.elements.userNumber.value;\n    checkContact(name)\n      ? toast.error('Contact already in a list')\n      : dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <div className=\"container\">\n      <form className={css.addForm} onSubmit={handleSubmit}>\n        <TextField\n          id=\"Name\"\n          label=\"Name\"\n          name=\"userName\"\n          size=\"small\"\n          required\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n        <TextField\n          id=\"Number\"\n          label=\"Phone number\"\n          size=\"small\"\n          name=\"userNumber\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button variant=\"contained\" type=\"submit\" disabled={isLoading}>\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormAddContact;\n","import ContactsList from 'components/ContactsList/ContactsList';\nimport FormAddContact from 'components/FormAddContact/FormAddContact';\n\nconst Contacts = () => {\n  return (\n    <>\n      <FormAddContact />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","onClick","disabled","Tooltip","title","IconButton","type","style","width","height","visible","ariaLabel","colors","Delete","ContactsListItems","id","name","number","dispatch","useDispatch","useState","setIsLoading","handleDelete","deleteContact","className","css","data","map","TextField","label","size","onChange","e","setFilter","target","value","selectFilterValue","filter","useSelector","user","selectUser","filterValue","contactsForRender","normalizedFilter","toLowerCase","includes","visibleContacts","useEffect","fetchContacts","length","textAlign","Filter","onSubmit","preventDefault","form","elements","userName","userNumber","normalizedNewContactName","some","contact","checkContact","addContact","toast","reset","required","pattern","Button","variant"],"sourceRoot":""}