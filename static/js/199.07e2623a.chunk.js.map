{"version":3,"file":"static/js/199.07e2623a.chunk.js","mappings":"sOACA,EAA+B,+B,SCkE/B,EA9DiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MAWjB,OACE,gBAAKC,UAAU,YAAf,UACE,kBAAMA,UAAWC,EAAkBC,SAZlB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAOF,EAAKG,SAASC,SAASC,MAC9BC,EAAQN,EAAKG,SAASI,UAAUF,MAChCG,EAAWR,EAAKG,SAASM,aAAaJ,MAC5CZ,GAASiB,EAAAA,EAAAA,IAAS,CAAER,KAAAA,EAAMI,MAAAA,EAAOE,SAAAA,KACjCR,EAAKW,OACN,EAIG,WACE,SAACC,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,OACNZ,KAAK,WACLa,KAAK,QACLC,QAAQ,2HACRC,MAAM,yIACNC,UAAQ,KAWV,SAACN,EAAA,EAAD,CACEC,GAAG,WACHC,MAAM,QACNK,KAAK,QACLjB,KAAK,WACLa,KAAK,QACLG,UAAQ,KAIV,SAACN,EAAA,EAAD,CACEC,GAAG,eACHC,MAAM,WACNK,KAAK,WACLjB,KAAK,eACLa,KAAK,QACLG,UAAQ,KAKV,SAACE,EAAA,EAAD,CAAQC,QAAQ,YAAYF,KAAK,SAAjC,SAA0C,iBAMjD,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerForm\":\"Register_registerForm__uD5pr\"};","import { Button, TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operation';\nimport css from './Register.module.css';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.userName.value;\n    const email = form.elements.userEmail.value;\n    const password = form.elements.userPassword.value;\n    dispatch(register({ name, email, password }));\n    form.reset();\n  };\n\n  return (\n    <div className=\"container\">\n      <form className={css.registerForm} onSubmit={handleSubmit}>\n        <TextField\n          id=\"userName\"\n          label=\"Name\"\n          name=\"userName\"\n          size=\"small\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        {/* <label htmlFor=\"userName\">Name</label>\n        <input\n          id=\"userName\"\n          type=\"text\"\n          name=\"userName\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        /> */}\n        <TextField\n          id=\"userMail\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"userMail\"\n          size=\"small\"\n          required\n        />\n        {/* <label htmlFor=\"userEmail\">Email:</label>\n        <input id=\"userEmail\" type=\"email\" name=\"userEmail\" required /> */}\n        <TextField\n          id=\"userPassword\"\n          label=\"Password\"\n          type=\"password\"\n          name=\"userPassword\"\n          size=\"small\"\n          required\n        />\n        {/* <label htmlFor=\"userPassword\">Password</label>\n        <input id=\"userPassword\" type=\"password\" name=\"userPassword\" required /> */}\n        {/* <button type=\"submit\">Register</button> */}\n        <Button variant=\"contained\" type=\"submit\">\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","target","name","elements","userName","value","email","userEmail","password","userPassword","register","reset","TextField","id","label","size","pattern","title","required","type","Button","variant"],"sourceRoot":""}